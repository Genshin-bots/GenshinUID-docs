import{_ as o}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.576d70b4.js";import{_ as n}from"./chunks/Badge.167f4610.js";import{_ as p,o as r,c,k as a,a as s,H as t,Q as d}from"./chunks/framework.d8868ba7.js";import"./chunks/commonjsHelpers.725317a4.js";const B=JSON.parse('{"title":"Core模块","description":"","frontmatter":{},"headers":[],"relativePath":"CodePlugins/Class.md","filePath":"CodePlugins/Class.md","lastUpdated":1706971866000}'),i={name:"CodePlugins/Class.md"},y={id:"core模块",tabindex:"-1"},E=a("a",{class:"header-anchor",href:"#core模块","aria-label":'Permalink to "Core模块<Badge type="danger" text="困难" />"'},"​",-1),h=d(`<h2 id="class-svlist" tabindex="-1"><code>class</code> SVList <a class="header-anchor" href="#class-svlist" aria-label="Permalink to &quot;\`class\` SVList&quot;">​</a></h2><h2 id="class-sv" tabindex="-1"><code>class</code> SV <a class="header-anchor" href="#class-sv" aria-label="Permalink to &quot;\`class\` SV&quot;">​</a></h2><p>服务注册器</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__init__</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        self,</span></span>
<span class="line"><span style="color:#E1E4E8;">        name: </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        pm: </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        priority: </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        enabled: </span><span style="color:#79B8FF;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        area: Literal[</span><span style="color:#9ECBFF;">&#39;GROUP&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;DIRECT&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;ALL&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;ALL&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        black_list: List </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [],</span></span>
<span class="line"><span style="color:#E1E4E8;">        white_list: List </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [],</span></span>
<span class="line"><span style="color:#E1E4E8;">):</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__init__</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        self,</span></span>
<span class="line"><span style="color:#24292E;">        name: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        pm: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        priority: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        enabled: </span><span style="color:#005CC5;">bool</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">True</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        area: Literal[</span><span style="color:#032F62;">&#39;GROUP&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;DIRECT&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;ALL&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;ALL&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        black_list: List </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [],</span></span>
<span class="line"><span style="color:#24292E;">        white_list: List </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [],</span></span>
<span class="line"><span style="color:#24292E;">):</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><table><thead><tr><th>参数</th><th style="text-align:left;">类型</th><th>默认值</th><th>注释</th></tr></thead><tbody><tr><td>name</td><td style="text-align:left;"><code>str</code></td><td>无</td><td>服务的名称</td></tr><tr><td>pm</td><td style="text-align:left;"><code>int</code></td><td><code>6</code></td><td>用户权限</td></tr><tr><td>priority</td><td style="text-align:left;"><code>int</code></td><td><code>5</code></td><td>响应优先级</td></tr><tr><td>enabled</td><td style="text-align:left;"><code>bool</code></td><td><code>True</code></td><td>启用状态</td></tr><tr><td>area</td><td style="text-align:left;"><code>Literal[&#39;GROUP&#39;, &#39;DIRECT&#39;, &#39;ALL&#39;]</code></td><td><code>ALL</code></td><td>作用范围</td></tr><tr><td>black_list</td><td style="text-align:left;"><code>list</code></td><td><code>[]</code></td><td>黑名单列表</td></tr><tr><td>white_list</td><td style="text-align:left;"><code>list</code></td><td><code>[]</code></td><td>白名单列表</td></tr></tbody></table><h3 id="method-on-fullmatch" tabindex="-1"><code>method</code> on_fullmatch <a class="header-anchor" href="#method-on-fullmatch" aria-label="Permalink to &quot;\`method\` on_fullmatch&quot;">​</a></h3><p><code>def on_fullmatch(self, keyword: Union[str, Tuple[str, ...]], block: bool = False)</code></p><table><thead><tr><th>参数</th><th style="text-align:left;">类型</th><th>默认值</th></tr></thead><tbody><tr><td>keyword</td><td style="text-align:left;"><code>Union[str, Tuple[str, ...]]</code></td><td>无</td></tr><tr><td>block</td><td style="text-align:left;"><code>bool</code></td><td><code>False</code></td></tr></tbody></table><p>全字匹配消息。</p><h3 id="method-on-prefix" tabindex="-1"><code>method</code> on_prefix <a class="header-anchor" href="#method-on-prefix" aria-label="Permalink to &quot;\`method\` on_prefix&quot;">​</a></h3><p><code>def on_fullmatch(self, keyword: Union[str, Tuple[str, ...]], block: bool = False)</code></p><table><thead><tr><th>参数</th><th style="text-align:left;">类型</th><th>默认值</th></tr></thead><tbody><tr><td>keyword</td><td style="text-align:left;"><code>Union[str, Tuple[str, ...]]</code></td><td>无</td></tr><tr><td>block</td><td style="text-align:left;"><code>bool</code></td><td><code>False</code></td></tr></tbody></table><p>匹配消息前缀。</p><h3 id="method-on-suffix" tabindex="-1"><code>method</code> on_suffix <a class="header-anchor" href="#method-on-suffix" aria-label="Permalink to &quot;\`method\` on_suffix&quot;">​</a></h3><p><code>def on_fullmatch(self, keyword: Union[str, Tuple[str, ...]], block: bool = False)</code></p><table><thead><tr><th>参数</th><th style="text-align:left;">类型</th><th>默认值</th></tr></thead><tbody><tr><td>keyword</td><td style="text-align:left;"><code>Union[str, Tuple[str, ...]]</code></td><td>无</td></tr><tr><td>block</td><td style="text-align:left;"><code>bool</code></td><td><code>False</code></td></tr></tbody></table><p>全字消息后缀。</p><h3 id="method-on-keyword" tabindex="-1"><code>method</code> on_keyword <a class="header-anchor" href="#method-on-keyword" aria-label="Permalink to &quot;\`method\` on_keyword&quot;">​</a></h3><p><code>def on_fullmatch(self, keyword: Union[str, Tuple[str, ...]], block: bool = False)</code></p><table><thead><tr><th>参数</th><th style="text-align:left;">类型</th><th>默认值</th></tr></thead><tbody><tr><td>keyword</td><td style="text-align:left;"><code>Union[str, Tuple[str, ...]]</code></td><td>无</td></tr><tr><td>block</td><td style="text-align:left;"><code>bool</code></td><td><code>False</code></td></tr></tbody></table><p>全字匹配消息关键字。</p><h3 id="method-on-command" tabindex="-1"><code>method</code> on_command <a class="header-anchor" href="#method-on-command" aria-label="Permalink to &quot;\`method\` on_command&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">on_fullmatch</span><span style="color:#E1E4E8;">(self, keyword: Union[</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">, Tuple[</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">]], block: </span><span style="color:#79B8FF;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">False</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">on_fullmatch</span><span style="color:#24292E;">(self, keyword: Union[</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, Tuple[</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">]], block: </span><span style="color:#005CC5;">bool</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">False</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><table><thead><tr><th>参数</th><th style="text-align:left;">类型</th><th>默认值</th></tr></thead><tbody><tr><td>keyword</td><td style="text-align:left;"><code>Union[str, Tuple[str, ...]]</code></td><td>无</td></tr><tr><td>block</td><td style="text-align:left;"><code>bool</code></td><td><code>False</code></td></tr></tbody></table><p>全字匹配消息命令。</p><h2 id="value-sl" tabindex="-1"><code>value</code> SL <a class="header-anchor" href="#value-sl" aria-label="Permalink to &quot;\`value\` SL&quot;">​</a></h2><p>服务列表。是一个<a href="#class-svlist">SVList</a>对象。</p>`,27);function b(m,u,f,_,F,C){const e=n,l=o;return r(),c("div",null,[a("h1",y,[s("Core模块"),t(e,{type:"danger",text:"困难"}),s(),E]),t(l,{readTime:"1",words:"325"}),h])}const T=p(i,[["render",b]]);export{B as __pageData,T as default};
